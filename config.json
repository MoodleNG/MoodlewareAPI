{
  "/login/token.php": [
    {
      "path": "/auth",
      "method": "GET",
      "function": "auth",
      "description": "Get Moodle token for API calls.",
      "tags": ["Authentication"],
      "query_params": [
        {
          "name": "username",
          "type": "str",
          "required": true,
          "description": "Moodle instance username"
        },
        {
          "name": "password",
          "type": "str",
          "required": true,
          "description": "Moodle instance password"
        },
        {
          "name": "service",
          "type": "str",
          "required": false,
          "default": "moodle_mobile_app",
          "description": "Web service name"
        }
      ],
      "responses": {
        "200": {
          "description": "Token response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": { "type": "string" },
                  "privatetoken": { "type": "string" }
                }
              },
              "example": {
                "token": "abcdef1234567890",
                "privatetoken": "abcdef1234567890_priv"
              }
            }
          }
        },
        "422": {
          "description": "Invalid Credentials",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": { "type": "string" },
                  "errorcode": { "type": "string" },
                  "stacktrace": { "type": ["string", "null"] },
                  "debuginfo": { "type": ["string", "null"] },
                  "reproductionlink": { "type": ["string", "null"] }
                }
              },
              "example": {
                "error": "Invalid login",
                "errorcode": "invalidlogin",
                "stacktrace": null,
                "debuginfo": null,
                "reproductionlink": null
              }
            }
          }
        }
      }
    }
  ],
  "/webservice/rest/server.php": [
    {
      "path": "/core_webservice_get_site_info",
      "method": "GET",
      "function": "core_webservice_get_site_info",
      "description": "Get Moodle site information & user information",
      "tags": ["Core"],
      "query_params": [],
      "responses": {
        "200": {
          "description": "Site and user information",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sitename": { "type": "string" },
                  "username": { "type": "string" },
                  "firstname": { "type": "string" },
                  "lastname": { "type": "string" },
                  "fullname": { "type": "string" },
                  "lang": { "type": "string" },
                  "userid": { "type": "integer" },
                  "siteurl": { "type": "string" },
                  "userpictureurl": { "type": "string" },
                  "usercanmanageownfiles": { "type": "boolean" },
                  "userquota": { "type": "integer" },
                  "usermaxuploadfilesize": { "type": "integer" },
                  "userhomepage": { "type": "integer" },
                  "userprivateaccesskey": { "type": "string" },
                  "siteid": { "type": "integer" },
                  "sitecalendartype": { "type": "string" },
                  "usercalendartype": { "type": "string" },
                  "userissiteadmin": { "type": "boolean" },
                  "theme": { "type": "string" },
                  "limitconcurrentlogins": { "type": "integer" },
                  "policyagreed": { "type": "integer" }
                }
              },
              "example": {
                "sitename": "School XYZ",
                "username": "jdoe",
                "firstname": "John",
                "lastname": "Doe",
                "fullname": "John Doe",
                "lang": "en",
                "userid": 42,
                "siteurl": "https://moodle.example.com",
                "userpictureurl": "https://moodle.example.com/theme/image.php/boost/core/1690000000/u/f1",
                "usercanmanageownfiles": true,
                "userquota": 104857600,
                "usermaxuploadfilesize": 10485760,
                "userhomepage": 0,
                "userprivateaccesskey": "abcdef1234567890key",
                "siteid": 1,
                "sitecalendartype": "gregorian",
                "usercalendartype": "gregorian",
                "userissiteadmin": false,
                "theme": "boost",
                "limitconcurrentlogins": 1,
                "policyagreed": 1
              }
            }
          }
        },
        "422": {
          "description": "Invalid Request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": { "type": "string" },
                  "errorcode": { "type": "string" },
                  "stacktrace": { "type": ["string", "null"] },
                  "debuginfo": { "type": ["string", "null"] },
                  "reproductionlink": { "type": ["string", "null"] }
                }
              },
              "example": {
                "error": "Invalid parameter value detected",
                "errorcode": "invalidparameter",
                "stacktrace": null,
                "debuginfo": null,
                "reproductionlink": null
              }
            }
          }
        }
      }
    },

    {
      "path": "/core_course_get_contents",
      "method": "GET",
      "function": "core_course_get_contents",
      "description": "Get course contents (sections and activities)",
      "tags": ["Courses"],
      "query_params": [
        {
          "name": "courseid",
          "type": "int",
          "required": true,
          "description": "Course ID"
        }
      ]
    },

    {
      "path": "/core_course_search_courses",
      "method": "GET",
      "function": "core_course_search_courses",
      "description": "Search courses by criteria",
      "tags": ["Courses"],
      "query_params": [
        {
          "name": "criterianame",
          "type": "str",
          "required": false,
          "default": "search",
          "description": "Search criteria name"
        },
        {
          "name": "criteriavalue",
          "type": "str",
          "required": true,
          "description": "Search term"
        },
        {
          "name": "page",
          "type": "int",
          "required": false,
          "default": 0,
          "description": "Page number"
        },
        {
          "name": "perpage",
          "type": "int",
          "required": false,
          "default": 100,
          "description": "Number of results per page"
        },
        {
          "name": "limittoenrolled",
          "type": "int",
          "required": false,
          "default": 0,
          "description": "Limit to enrolled courses only"
        }
      ]
    },

    {
      "path": "/core_course_get_courses_by_field",
      "method": "GET",
      "function": "core_course_get_courses_by_field",
      "description": "Get courses by field (id, shortname, fullname, etc.)",
      "tags": ["Courses"],
      "query_params": [
        {
          "name": "field",
          "type": "str",
          "required": true,
          "description": "Field to search by"
        },
        {
          "name": "value",
          "type": "str",
          "required": true,
          "description": "Value to search for"
        }
      ]
    },

    {
      "path": "/core_enrol_get_enrolled_users",
      "method": "GET",
      "function": "core_enrol_get_enrolled_users",
      "description": "Get users enrolled in a course",
      "tags": ["Enrollment"],
      "query_params": [
        {
          "name": "courseid",
          "type": "int",
          "required": true,
          "description": "Course ID"
        }
      ]
    },

    {
      "path": "/core_enrol_get_users_courses",
      "method": "GET",
      "function": "core_enrol_get_users_courses",
      "description": "Get courses the user is enrolled in",
      "tags": ["Enrollment"],
      "query_params": [
        {
          "name": "userid",
          "type": "int",
          "required": false,
          "default": 0,
          "description": "User ID (0 for current user)"
        }
      ]
    },

    {
      "path": "/core_files_get_files",
      "method": "GET",
      "function": "core_files_get_files",
      "description": "Get files from specified context",
      "tags": ["Files"],
      "query_params": [
        {
          "name": "contextid",
          "type": "int",
          "required": true,
          "description": "Context ID"
        },
        {
          "name": "component",
          "type": "str",
          "required": true,
          "description": "Component name"
        },
        {
          "name": "filearea",
          "type": "str",
          "required": true,
          "description": "File area"
        },
        {
          "name": "itemid",
          "type": "int",
          "required": false,
          "default": 0,
          "description": "Item ID"
        },
        {
          "name": "filepath",
          "type": "str",
          "required": false,
          "default": "/",
          "description": "File path"
        },
        {
          "name": "filename",
          "type": "str",
          "required": false,
          "default": "",
          "description": "File name"
        }
      ]
    },

    {
      "path": "/core_message_get_messages",
      "method": "GET",
      "function": "core_message_get_messages",
      "description": "Get messages",
      "tags": ["Messages"],
      "query_params": [
        {
          "name": "useridto",
          "type": "int",
          "required": true,
          "description": "User ID to (recipient)"
        },
        {
          "name": "useridfrom",
          "type": "int",
          "required": false,
          "description": "User ID from (sender)"
        },
        {
          "name": "type",
          "type": "str",
          "required": false,
          "default": "both",
          "description": "Message type (sent, received, both)"
        },
        {
          "name": "read",
          "type": "bool",
          "required": false,
          "description": "Read status"
        },
        {
          "name": "newestfirst",
          "type": "bool",
          "required": false,
          "default": true,
          "description": "Sort newest first"
        },
        {
          "name": "limitfrom",
          "type": "int",
          "required": false,
          "default": 0,
          "description": "Limit from"
        },
        {
          "name": "limitnum",
          "type": "int",
          "required": false,
          "default": 100,
          "description": "Number of messages"
        }
      ]
    },

    {
      "path": "/core_user_get_course_user_profiles",
      "method": "GET",
      "function": "core_user_get_course_user_profiles",
      "description": "Get user profiles for users in a course",
      "tags": ["Users"],
      "query_params": [
        {
          "name": "courseid",
          "type": "int",
          "required": true,
          "description": "Course ID"
        }
      ]
    },

    {
      "path": "/core_user_get_users_by_field",
      "method": "GET",
      "function": "core_user_get_users_by_field",
      "description": "Get users by field (id, username, email, etc.)",
      "tags": ["Users"],
      "query_params": [
        {
          "name": "field",
          "type": "str",
          "required": true,
          "description": "Field to search by"
        },
        {
          "name": "values",
          "type": "list",
          "required": true,
          "description": "Values to search for"
        }
      ]
    },

    {
      "path": "/core_user_get_user_preferences",
      "method": "GET",
      "function": "core_user_get_user_preferences",
      "description": "Get user preferences",
      "tags": ["Users"],
      "query_params": [
        {
          "name": "userid",
          "type": "int",
          "required": false,
          "description": "User ID (optional)"
        },
        {
          "name": "name",
          "type": "str",
          "required": false,
          "description": "Preference name"
        }
      ]
    },

    {
      "path": "/enrol_self_enrol_user",
      "method": "GET",
      "function": "enrol_self_enrol_user",
      "description": "Self-enrol user in a course | unenrol by using function on enrolled course",
      "tags": ["Enrollment"],
      "query_params": [
        {
          "name": "courseid",
          "type": "int",
          "required": true,
          "description": "Course ID"
        }
      ]
    },

    {
      "path": "/gradereport_user_get_grade_items",
      "method": "GET",
      "function": "gradereport_user_get_grade_items",
      "description": "Get grade items for a course",
      "tags": ["Grades"],
      "query_params": [
        {
          "name": "courseid",
          "type": "int",
          "required": true,
          "description": "Course ID"
        },
        {
          "name": "userid",
          "type": "int",
          "required": false,
          "default": 0,
          "description": "User ID"
        }
      ]
    },

    {
      "path": "/mod_assign_get_assignments",
      "method": "GET",
      "function": "mod_assign_get_assignments",
      "description": "Get assignments from specified courses",
      "tags": ["Assignments"],
      "query_params": [
        {
          "name": "courseids",
          "type": "list",
          "required": true,
          "description": "List of course IDs"
        }
      ]
    },

    {
      "path": "/mod_assign_get_submissions",
      "method": "GET",
      "function": "mod_assign_get_submissions",
      "description": "Get assignment submissions",
      "tags": ["Assignments"],
      "query_params": [
        {
          "name": "assignmentids",
          "type": "list",
          "required": true,
          "description": "Assignment IDs"
        }
      ]
    },

    {
      "path": "/mod_assign_get_submission_status",
      "method": "GET",
      "function": "mod_assign_get_submission_status",
      "description": "Get assignment submission status",
      "tags": ["Assignments"],
      "query_params": [
        {
          "name": "assignid",
          "type": "int",
          "required": true,
          "description": "Assignment ID"
        },
        {
          "name": "userid",
          "type": "int",
          "required": false,
          "description": "User ID (optional)"
        }
      ]
    },

    {
      "path": "/mod_forum_get_forums_by_courses",
      "method": "GET",
      "function": "mod_forum_get_forums_by_courses",
      "description": "Get forums in specified courses",
      "tags": ["Forums"],
      "query_params": [
        {
          "name": "courseids",
          "type": "list",
          "required": true,
          "description": "List of course IDs"
        }
      ]
    },

    {
      "path": "/mod_forum_get_forum_discussions",
      "method": "GET",
      "function": "mod_forum_get_forum_discussions",
      "description": "Get discussions in a forum",
      "tags": ["Forums"],
      "query_params": [
        {
          "name": "forumid",
          "type": "int",
          "required": true,
          "description": "Forum ID"
        }
      ]
    },

    {
      "path": "/core_calendar_get_calendar_events",
      "method": "GET",
      "function": "core_calendar_get_calendar_events",
      "description": "Get calendar events",
      "tags": ["Calendar"],
      "query_params": [
        {
          "name": "courseid",
          "type": "int",
          "required": false,
          "description": "Course ID (optional)"
        }
      ]
    },

    {
      "path": "/core_calendar_get_action_events_by_course",
      "method": "GET",
      "function": "core_calendar_get_action_events_by_course",
      "description": "Get action events (assignments, quizzes) by course",
      "tags": ["Calendar"],
      "query_params": [
        {
          "name": "courseid",
          "type": "int",
          "required": true,
          "description": "Course ID"
        },
        {
          "name": "timesortfrom",
          "type": "int",
          "required": false,
          "description": "Time sort from (timestamp)"
        },
        {
          "name": "timesortto",
          "type": "int",
          "required": false,
          "description": "Time sort to (timestamp)"
        },
        {
          "name": "aftereventid",
          "type": "int",
          "required": false,
          "description": "After event ID"
        },
        {
          "name": "limitnum",
          "type": "int",
          "required": false,
          "default": 20,
          "description": "Number of events to return"
        }
      ]
    },

    {
      "path": "/mod_quiz_get_quizzes_by_courses",
      "method": "GET",
      "function": "mod_quiz_get_quizzes_by_courses",
      "description": "Get quizzes in specified courses",
      "tags": ["Quizzes"],
      "query_params": [
        {
          "name": "courseids",
          "type": "list",
          "required": true,
          "description": "List of course IDs"
        }
      ],
      "responses": {
        "200": {
          "description": "List of quizzes for the given courses",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quizzes": { "type": "array", "items": { "type": "object" } },
                  "warnings": { "type": "array", "items": { "type": "object" } }
                },
                "required": ["quizzes"]
              },
              "example": {
                "quizzes": [
                  {
                    "id": 1001,
                    "coursemodule": 2001,
                    "course": 42,
                    "name": "Chemistry Homework Quiz",
                    "intro": "<p>Please answer all questions.</p>",
                    "introformat": 1,
                    "introfiles": [],
                    "section": 1,
                    "visible": true,
                    "groupmode": 0,
                    "groupingid": 0,
                    "lang": "en",
                    "timeopen": 0,
                    "timeclose": 0,
                    "timelimit": 0,
                    "overduehandling": "autoabandon",
                    "graceperiod": 0,
                    "preferredbehaviour": "deferredfeedback",
                    "canredoquestions": 0,
                    "attempts": 0,
                    "attemptonlast": 0,
                    "grademethod": 1,
                    "decimalpoints": 2,
                    "questiondecimalpoints": -1,
                    "reviewattempt": 69904,
                    "reviewcorrectness": 4368,
                    "reviewmaxmarks": 69904,
                    "reviewmarks": 4368,
                    "reviewspecificfeedback": 4368,
                    "reviewgeneralfeedback": 4368,
                    "reviewrightanswer": 4368,
                    "reviewoverallfeedback": 4368,
                    "questionsperpage": 1,
                    "navmethod": "free",
                    "sumgrades": 5,
                    "grade": 5,
                    "browsersecurity": "-",
                    "delay1": 0,
                    "delay2": 0,
                    "showuserpicture": 0,
                    "showblocks": 0,
                    "completionattemptsexhausted": 0,
                    "completionpass": 0,
                    "allowofflineattempts": 0,
                    "autosaveperiod": 60,
                    "hasfeedback": 0,
                    "hasquestions": 1
                  },
                  {
                    "id": 1002,
                    "coursemodule": 2002,
                    "course": 42,
                    "name": "Math Practice Quiz",
                    "intro": "<p>Practice questions for the exam.</p>",
                    "introformat": 1,
                    "introfiles": [],
                    "section": 1,
                    "visible": true,
                    "groupmode": 0,
                    "groupingid": 0,
                    "lang": "en",
                    "timeopen": 0,
                    "timeclose": 0,
                    "timelimit": 900,
                    "preferredbehaviour": "deferredfeedback",
                    "attempts": 2,
                    "grademethod": 4,
                    "decimalpoints": 2,
                    "questiondecimalpoints": -1,
                    "sumgrades": 4,
                    "grade": 4,
                    "hasfeedback": 0
                  },
                  {
                    "id": 1003,
                    "coursemodule": 2003,
                    "course": 42,
                    "name": "Biology Final Quiz",
                    "intro": "<p>Final quiz for the course.</p>",
                    "introformat": 1,
                    "introfiles": [],
                    "section": 2,
                    "visible": true,
                    "groupmode": 0,
                    "groupingid": 0,
                    "lang": "en",
                    "timeopen": 1710000000,
                    "timeclose": 1710600000,
                    "timelimit": 2400,
                    "preferredbehaviour": "immediatefeedback",
                    "attempts": 1,
                    "grademethod": 1,
                    "decimalpoints": 2,
                    "questiondecimalpoints": -1,
                    "sumgrades": 10,
                    "grade": 10,
                    "hasfeedback": 0
                  }
                ],
                "warnings": []
              }
            }
          }
        },
        "422": {
          "description": "Invalid Request",
          "content": {
            "application/json": {
              "schema": { "type": "object" },
              "example": { "error": "invalidparameter", "errorcode": "invalidparameter" }
            }
          }
        }
      }
    },

    {
      "path": "/mod_quiz_get_quiz_access_information",
      "method": "GET",
      "function": "mod_quiz_get_quiz_access_information",
      "description": "Get quiz access information",
      "tags": ["Quizzes"],
      "query_params": [
        {
          "name": "quizid",
          "type": "int",
          "required": true,
          "description": "Quiz ID"
        }
      ],
      "responses": {
        "200": {
          "description": "Quiz access info for current user",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "canattempt": {"type": "boolean"},
                  "canmanage": {"type": "boolean"},
                  "canpreview": {"type": "boolean"},
                  "canreviewmyattempts": {"type": "boolean"},
                  "canviewreports": {"type": "boolean"},
                  "accessrules": {"type": "array", "items": {"type": "string"}},
                  "activerulenames": {"type": "array", "items": {"type": "string"}},
                  "preventaccessreasons": {"type": "array", "items": {"type": "string"}},
                  "warnings": {"type": "array", "items": {"type": "object"}}
                },
                "required": ["canattempt", "accessrules", "warnings"]
              },
              "example": {
                "canattempt": true,
                "canmanage": false,
                "canpreview": false,
                "canreviewmyattempts": true,
                "canviewreports": false,
                "accessrules": [],
                "activerulenames": ["quizaccess_openclosedate"],
                "preventaccessreasons": [],
                "warnings": []
              }
            }
          }
        }
      }
    },

    {
      "path": "/mod_quiz_view_quiz",
      "method": "GET",
      "function": "mod_quiz_view_quiz",
      "description": "Log that a user viewed the quiz (for analytics).",
      "tags": ["Quizzes"],
      "query_params": [
        { "name": "quizid", "type": "int", "required": true, "description": "Quiz ID" }
      ],
      "responses": {
        "200": {
          "description": "View logged",
            "content": { 
            "application/json": { 
              "schema": { "type": "object" }, 
              "example": { 
              "status": true, 
              "warnings": [] 
              } 
            } 
            }
        }
      }
    },

    {
      "path": "/mod_quiz_start_attempt",
      "method": "GET",
      "function": "mod_quiz_start_attempt",
      "description": "Start a new quiz attempt",
      "tags": ["Quizzes"],
      "query_params": [
        { "name": "quizid", "type": "int", "required": true, "description": "Quiz ID" },
        {
          "name": "preflightdata",
          "type": "list",
          "required": false,
          "default": [],
          "description": "Pre-flight data as list of {name, value} objects (JSON or CSV)."
        },
        { "name": "forcenew", "type": "bool", "required": false, "default": false, "description": "Force new attempt." }
      ],
      "responses": {
        "200": {
          "description": "Attempt started",
          "content": {
            "application/json": {
              "schema": { "type": "object" },
              "example": {
                "attempt": { "id": 101, "quiz": 15, "state": "inprogress", "timestart": 1694350000, "layout": "1,2,3,0" },
                "warnings": []
              }
            }
          }
        }
      }
    },

    {
      "path": "/mod_quiz_get_attempt_data",
      "method": "GET",
      "function": "mod_quiz_get_attempt_data",
      "description": "Get quiz attempt data including questions",
      "tags": ["Quizzes"],
      "query_params": [
        { "name": "attemptid", "type": "int", "required": true, "description": "Attempt ID" },
        { "name": "page", "type": "int", "required": false, "default": 0, "description": "Page number (-1 for all pages)" },
        {
          "name": "preflightdata",
          "type": "list",
          "required": false,
          "default": [],
          "description": "Pre-flight data as list of {name, value} objects (JSON)."
        }
      ],
      "responses": {
        "200": {
          "description": "Attempt data including question states and HTML.",
          "content": {
            "application/json": {
              "schema": { "type": "object" },
              "example": {
                "attempt": { "id": 101, "state": "inprogress" },
                "questions": [
                  { "slot": 1, "type": "multichoice", "html": "<div>Question 1 HTML</div>", "name": "Q1" }
                ],
                "warnings": []
              }
            }
          }
        }
      }
    },

    {
      "path": "/mod_quiz_save_attempt",
      "method": "GET",
      "function": "mod_quiz_save_attempt",
      "description": "Save quiz attempt responses",
      "tags": ["Quizzes"],
      "query_params": [
        { "name": "attemptid", "type": "int", "required": true, "description": "Attempt ID" },
        {
          "name": "data",
          "type": "list",
          "required": true,
          "description": "Responses as list of {name, value} objects, e.g. [{\"name\":\"q1:1_answer\",\"value\":\"2\"}]."
        },
        {
          "name": "preflightdata",
          "type": "list",
          "required": false,
          "default": [],
          "description": "Pre-flight data as list of {name, value} objects"
        }
      ],
      "responses": {
        "200": {
          "description": "Save result",
          "content": {
            "application/json": {
              "schema": { "type": "object" },
              "example": { "status": true, "warnings": [] }
            }
          }
        }
      }
    },

    {
      "path": "/mod_quiz_process_attempt",
      "method": "GET",
      "function": "mod_quiz_process_attempt",
      "description": "Process and optionally finish a quiz attempt",
      "tags": ["Quizzes"],
      "query_params": [
        { "name": "attemptid", "type": "int", "required": true, "description": "Attempt ID" },
        {
          "name": "data",
          "type": "list",
          "required": false,
          "default": [],
          "description": "Responses as list of {name, value} objects"
        },
        { "name": "finishattempt", "type": "bool", "required": false, "default": false, "description": "Finish the attempt" },
        { "name": "timeup", "type": "bool", "required": false, "default": false, "description": "Time is up" },
        {
          "name": "preflightdata",
          "type": "list",
          "required": false,
          "default": [],
          "description": "Pre-flight data as list of {name, value} objects"
        }
      ],
      "responses": {
        "200": {
          "description": "Processing result",
          "content": {
            "application/json": {
              "schema": { "type": "object" },
              "example": {
                "state": "finished",
                "attempt": { "id": 101, "sumgrades": 8.5, "state": "finished" },
                "message": "The attempt has been submitted",
                "warnings": []
              }
            }
          }
        }
      }
    },

    {
      "path": "/mod_quiz_get_attempt_summary",
      "method": "GET",
      "function": "mod_quiz_get_attempt_summary",
      "description": "Get quiz attempt summary",
      "tags": ["Quizzes"],
      "query_params": [
        { "name": "attemptid", "type": "int", "required": true, "description": "Attempt ID" },
        {
          "name": "preflightdata",
          "type": "list",
          "required": false,
          "default": [],
          "description": "Pre-flight data as list of {name, value} objects"
        }
      ],
      "responses": {
        "200": {
          "description": "Attempt summary including question statuses.",
          "content": {
            "application/json": {
              "schema": { "type": "object" },
              "example": {
                "attempt": { "id": 101, "state": "finished" },
                "questions": [ { "slot": 1, "status": "Answered" } ],
                "warnings": []
              }
            }
          }
        }
      }
    },

    {
      "path": "/mod_quiz_get_user_attempts",
      "method": "GET",
      "function": "mod_quiz_get_user_attempts",
      "description": "Get quiz attempts for a user (defaults to current user)",
      "tags": ["Quizzes"],
      "query_params": [
        { "name": "quizid", "type": "int", "required": true, "description": "Quiz ID" },
        { "name": "userid", "type": "int", "required": false, "description": "User ID (optional)" }
      ],
      "responses": {
        "200": {
          "description": "List of attempts",
          "content": {
            "application/json": {
              "schema": { "type": "object" },
              "example": {
                "attempts": [
                  { "id": 101, "attempt": 1, "state": "finished", "sumgrades": 8.5 },
                  { "id": 102, "attempt": 2, "state": "inprogress" }
                ],
                "warnings": []
              }
            }
          }
        }
      }
    },

    {
      "path": "/mod_quiz_view_attempt",
      "method": "GET",
      "function": "mod_quiz_view_attempt",
      "description": "Log that a user viewed an attempt (for analytics).",
      "tags": ["Quizzes"],
      "query_params": [
        { "name": "attemptid", "type": "int", "required": true, "description": "Attempt ID" },
        { "name": "page", "type": "int", "required": false, "default": 0, "description": "Page number" }
      ],
      "responses": {
        "200": {
          "description": "View logged",
          "content": { "application/json": { "schema": { "type": "object" }, "example": { "status": true } } }
        }
      }
    },

    {
      "path": "/mod_quiz_get_attempt_review",
      "method": "GET",
      "function": "mod_quiz_get_attempt_review",
      "description": "Get the review of a finished attempt, including question feedback.",
      "tags": ["Quizzes"],
      "query_params": [
        { "name": "attemptid", "type": "int", "required": true, "description": "Attempt ID" },
        { "name": "page", "type": "int", "required": false, "default": -1, "description": "Page (-1 for all)" }
      ],
      "responses": {
        "200": {
          "description": "Attempt review",
          "content": {
            "application/json": {
              "schema": { "type": "object" },
              "example": {
                "attempt": { "id": 101, "state": "finished", "sumgrades": 8.5 },
                "questions": [
                  { "slot": 1, "status": "Correct", "feedback": "Well done." }
                ],
                "warnings": []
              }
            }
          }
        }
      }
    }
  ]
}